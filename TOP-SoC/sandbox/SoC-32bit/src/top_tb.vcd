$date
	Sun Jun 22 16:11:48 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_tb $end
$var wire 32 ! dram_dq [31:0] $end
$var wire 1 " trap $end
$var wire 1 # dram_we $end
$var wire 1 $ dram_ras $end
$var wire 1 % dram_dqs $end
$var wire 4 & dram_dm [3:0] $end
$var wire 1 ' dram_cs $end
$var wire 1 ( dram_ck $end
$var wire 1 ) dram_cas $end
$var wire 3 * dram_ba [2:0] $end
$var wire 14 + dram_addr [13:0] $end
$var reg 1 , clk $end
$var reg 1 - completed_addi_x1 $end
$var reg 1 . completed_addi_x2 $end
$var reg 1 / completed_loop $end
$var reg 1 0 completed_lw $end
$var reg 1 1 completed_sw_init $end
$var reg 1 2 completed_sw_update $end
$var reg 32 3 last_pc [31:0] $end
$var reg 1 4 load_completed $end
$var reg 32 5 loaded_value [31:0] $end
$var reg 32 6 loop_count [31:0] $end
$var reg 32 7 prev_pc [31:0] $end
$var reg 1 8 program_started $end
$var reg 1 9 reached_loop $end
$var reg 8 : reset_counter [7:0] $end
$var reg 1 ; reset_n $end
$var reg 1 < store_completed $end
$var reg 32 = stored_value [31:0] $end
$var integer 32 > expected_memory_addr [31:0] $end
$var integer 32 ? expected_x1_value [31:0] $end
$var integer 32 @ log_file [31:0] $end
$var integer 32 A max_loop_iterations [31:0] $end
$var integer 32 B reg_monitor_count [31:0] $end
$var real 1 C time_ms $end
$scope module dut $end
$var wire 1 , clk $end
$var wire 1 D clk_sys $end
$var wire 3 E cordic_axil_arprot [2:0] $end
$var wire 1 F cordic_axil_arready $end
$var wire 3 G cordic_axil_awprot [2:0] $end
$var wire 1 H cordic_axil_awready $end
$var wire 2 I cordic_axil_bresp [1:0] $end
$var wire 1 J cordic_axil_bvalid $end
$var wire 32 K cordic_axil_rdata [31:0] $end
$var wire 2 L cordic_axil_rresp [1:0] $end
$var wire 1 M cordic_axil_rvalid $end
$var wire 1 N cordic_axil_wready $end
$var wire 32 O dram_dq [31:0] $end
$var wire 1 ; reset_n $end
$var wire 1 P reset_sys_n $end
$var wire 3 Q sa_axil_arprot [2:0] $end
$var wire 1 R sa_axil_arready $end
$var wire 3 S sa_axil_awprot [2:0] $end
$var wire 1 T sa_axil_awready $end
$var wire 2 U sa_axil_bresp [1:0] $end
$var wire 1 V sa_axil_bvalid $end
$var wire 32 W sa_axil_rdata [31:0] $end
$var wire 2 X sa_axil_rresp [1:0] $end
$var wire 1 Y sa_axil_rvalid $end
$var wire 1 Z sa_axil_wready $end
$var wire 32 [ sa_m_axi_araddr [31:0] $end
$var wire 2 \ sa_m_axi_arburst [1:0] $end
$var wire 4 ] sa_m_axi_arid [3:0] $end
$var wire 8 ^ sa_m_axi_arlen [7:0] $end
$var wire 3 _ sa_m_axi_arsize [2:0] $end
$var wire 1 ` sa_m_axi_arvalid $end
$var wire 32 a sa_m_axi_awaddr [31:0] $end
$var wire 2 b sa_m_axi_awburst [1:0] $end
$var wire 4 c sa_m_axi_awid [3:0] $end
$var wire 8 d sa_m_axi_awlen [7:0] $end
$var wire 3 e sa_m_axi_awsize [2:0] $end
$var wire 1 f sa_m_axi_awvalid $end
$var wire 1 g sa_m_axi_bready $end
$var wire 1 h sa_m_axi_rready $end
$var wire 32 i sa_m_axi_wdata [31:0] $end
$var wire 1 j sa_m_axi_wlast $end
$var wire 4 k sa_m_axi_wstrb [3:0] $end
$var wire 1 l sa_m_axi_wvalid $end
$var wire 1 " trap $end
$var wire 1 m sa_m_axi_wready $end
$var wire 1 n sa_m_axi_rvalid $end
$var wire 2 o sa_m_axi_rresp [1:0] $end
$var wire 1 p sa_m_axi_rlast $end
$var wire 4 q sa_m_axi_rid [3:0] $end
$var wire 32 r sa_m_axi_rdata [31:0] $end
$var wire 1 s sa_m_axi_bvalid $end
$var wire 2 t sa_m_axi_bresp [1:0] $end
$var wire 4 u sa_m_axi_bid [3:0] $end
$var wire 1 v sa_m_axi_awready $end
$var wire 1 w sa_m_axi_arready $end
$var wire 1 x sa_axil_wvalid $end
$var wire 4 y sa_axil_wstrb [3:0] $end
$var wire 32 z sa_axil_wdata [31:0] $end
$var wire 1 { sa_axil_rready $end
$var wire 1 | sa_axil_bready $end
$var wire 1 } sa_axil_awvalid $end
$var wire 32 ~ sa_axil_awaddr [31:0] $end
$var wire 1 !" sa_axil_arvalid $end
$var wire 32 "" sa_axil_araddr [31:0] $end
$var wire 4 #" mem_wstrb [3:0] $end
$var wire 32 $" mem_wdata [31:0] $end
$var wire 1 %" mem_valid $end
$var wire 1 &" mem_ready $end
$var wire 32 '" mem_rdata [31:0] $end
$var wire 1 (" mem_instr $end
$var wire 32 )" mem_addr [31:0] $end
$var wire 1 # dram_we $end
$var wire 1 *" dram_s_axi_wvalid $end
$var wire 4 +" dram_s_axi_wstrb [3:0] $end
$var wire 1 ," dram_s_axi_wready $end
$var wire 1 -" dram_s_axi_wlast $end
$var wire 32 ." dram_s_axi_wdata [31:0] $end
$var wire 1 /" dram_s_axi_rvalid $end
$var wire 2 0" dram_s_axi_rresp [1:0] $end
$var wire 1 1" dram_s_axi_rready $end
$var wire 1 2" dram_s_axi_rlast $end
$var wire 4 3" dram_s_axi_rid [3:0] $end
$var wire 32 4" dram_s_axi_rdata [31:0] $end
$var wire 1 5" dram_s_axi_bvalid $end
$var wire 2 6" dram_s_axi_bresp [1:0] $end
$var wire 1 7" dram_s_axi_bready $end
$var wire 4 8" dram_s_axi_bid [3:0] $end
$var wire 1 9" dram_s_axi_awvalid $end
$var wire 3 :" dram_s_axi_awsize [2:0] $end
$var wire 1 ;" dram_s_axi_awready $end
$var wire 8 <" dram_s_axi_awlen [7:0] $end
$var wire 4 =" dram_s_axi_awid [3:0] $end
$var wire 2 >" dram_s_axi_awburst [1:0] $end
$var wire 32 ?" dram_s_axi_awaddr [31:0] $end
$var wire 1 @" dram_s_axi_arvalid $end
$var wire 3 A" dram_s_axi_arsize [2:0] $end
$var wire 1 B" dram_s_axi_arready $end
$var wire 8 C" dram_s_axi_arlen [7:0] $end
$var wire 4 D" dram_s_axi_arid [3:0] $end
$var wire 2 E" dram_s_axi_arburst [1:0] $end
$var wire 32 F" dram_s_axi_araddr [31:0] $end
$var wire 1 $ dram_ras $end
$var wire 1 % dram_dqs $end
$var wire 4 G" dram_dm [3:0] $end
$var wire 1 ' dram_cs $end
$var wire 1 ( dram_ck $end
$var wire 1 ) dram_cas $end
$var wire 3 H" dram_ba [2:0] $end
$var wire 14 I" dram_addr [13:0] $end
$var wire 1 J" cpu_m_axi_wvalid $end
$var wire 4 K" cpu_m_axi_wstrb [3:0] $end
$var wire 1 L" cpu_m_axi_wready $end
$var wire 1 M" cpu_m_axi_wlast $end
$var wire 32 N" cpu_m_axi_wdata [31:0] $end
$var wire 1 O" cpu_m_axi_rvalid $end
$var wire 2 P" cpu_m_axi_rresp [1:0] $end
$var wire 1 Q" cpu_m_axi_rready $end
$var wire 1 R" cpu_m_axi_rlast $end
$var wire 4 S" cpu_m_axi_rid [3:0] $end
$var wire 32 T" cpu_m_axi_rdata [31:0] $end
$var wire 1 U" cpu_m_axi_bvalid $end
$var wire 2 V" cpu_m_axi_bresp [1:0] $end
$var wire 1 W" cpu_m_axi_bready $end
$var wire 4 X" cpu_m_axi_bid [3:0] $end
$var wire 1 Y" cpu_m_axi_awvalid $end
$var wire 3 Z" cpu_m_axi_awsize [2:0] $end
$var wire 1 [" cpu_m_axi_awready $end
$var wire 8 \" cpu_m_axi_awlen [7:0] $end
$var wire 4 ]" cpu_m_axi_awid [3:0] $end
$var wire 2 ^" cpu_m_axi_awburst [1:0] $end
$var wire 32 _" cpu_m_axi_awaddr [31:0] $end
$var wire 1 `" cpu_m_axi_arvalid $end
$var wire 3 a" cpu_m_axi_arsize [2:0] $end
$var wire 1 b" cpu_m_axi_arready $end
$var wire 8 c" cpu_m_axi_arlen [7:0] $end
$var wire 4 d" cpu_m_axi_arid [3:0] $end
$var wire 2 e" cpu_m_axi_arburst [1:0] $end
$var wire 32 f" cpu_m_axi_araddr [31:0] $end
$var wire 1 g" cordic_axil_wvalid $end
$var wire 4 h" cordic_axil_wstrb [3:0] $end
$var wire 32 i" cordic_axil_wdata [31:0] $end
$var wire 1 j" cordic_axil_rready $end
$var wire 1 k" cordic_axil_bready $end
$var wire 1 l" cordic_axil_awvalid $end
$var wire 32 m" cordic_axil_awaddr [31:0] $end
$var wire 1 n" cordic_axil_arvalid $end
$var wire 32 o" cordic_axil_araddr [31:0] $end
$var parameter 32 p" ADDR_WIDTH $end
$var parameter 32 q" AXI4_ID_WIDTH $end
$var parameter 32 r" DATA_WIDTH $end
$var parameter 32 s" LPDDR4_CAPACITY_GB $end
$scope module axi_interconnect_inst $end
$var wire 1 D ACLK $end
$var wire 1 P ARESETN $end
$var wire 32 t" M0_AXI4LITE_ARADDR [31:0] $end
$var wire 3 u" M0_AXI4LITE_ARPROT [2:0] $end
$var wire 1 F M0_AXI4LITE_ARREADY $end
$var wire 1 n" M0_AXI4LITE_ARVALID $end
$var wire 32 v" M0_AXI4LITE_AWADDR [31:0] $end
$var wire 3 w" M0_AXI4LITE_AWPROT [2:0] $end
$var wire 1 H M0_AXI4LITE_AWREADY $end
$var wire 1 l" M0_AXI4LITE_AWVALID $end
$var wire 2 x" M0_AXI4LITE_BRESP [1:0] $end
$var wire 1 J M0_AXI4LITE_BVALID $end
$var wire 32 y" M0_AXI4LITE_RDATA [31:0] $end
$var wire 2 z" M0_AXI4LITE_RRESP [1:0] $end
$var wire 1 M M0_AXI4LITE_RVALID $end
$var wire 32 {" M0_AXI4LITE_WDATA [31:0] $end
$var wire 1 N M0_AXI4LITE_WREADY $end
$var wire 4 |" M0_AXI4LITE_WSTRB [3:0] $end
$var wire 1 g" M0_AXI4LITE_WVALID $end
$var wire 32 }" M1_AXI4LITE_ARADDR [31:0] $end
$var wire 3 ~" M1_AXI4LITE_ARPROT [2:0] $end
$var wire 1 R M1_AXI4LITE_ARREADY $end
$var wire 1 !" M1_AXI4LITE_ARVALID $end
$var wire 32 !# M1_AXI4LITE_AWADDR [31:0] $end
$var wire 3 "# M1_AXI4LITE_AWPROT [2:0] $end
$var wire 1 T M1_AXI4LITE_AWREADY $end
$var wire 1 } M1_AXI4LITE_AWVALID $end
$var wire 2 ## M1_AXI4LITE_BRESP [1:0] $end
$var wire 1 V M1_AXI4LITE_BVALID $end
$var wire 32 $# M1_AXI4LITE_RDATA [31:0] $end
$var wire 2 %# M1_AXI4LITE_RRESP [1:0] $end
$var wire 1 Y M1_AXI4LITE_RVALID $end
$var wire 32 &# M1_AXI4LITE_WDATA [31:0] $end
$var wire 1 Z M1_AXI4LITE_WREADY $end
$var wire 4 '# M1_AXI4LITE_WSTRB [3:0] $end
$var wire 1 x M1_AXI4LITE_WVALID $end
$var wire 1 @" M2_AXI4_ARVALID $end
$var wire 1 9" M2_AXI4_AWVALID $end
$var wire 1 *" M2_AXI4_WVALID $end
$var wire 1 U" S0_AXI4_BVALID $end
$var wire 1 O" S0_AXI4_RVALID $end
$var wire 32 (# S1_AXI4_ARADDR [31:0] $end
$var wire 2 )# S1_AXI4_ARBURST [1:0] $end
$var wire 4 *# S1_AXI4_ARID [3:0] $end
$var wire 8 +# S1_AXI4_ARLEN [7:0] $end
$var wire 3 ,# S1_AXI4_ARSIZE [2:0] $end
$var wire 1 ` S1_AXI4_ARVALID $end
$var wire 32 -# S1_AXI4_AWADDR [31:0] $end
$var wire 2 .# S1_AXI4_AWBURST [1:0] $end
$var wire 4 /# S1_AXI4_AWID [3:0] $end
$var wire 8 0# S1_AXI4_AWLEN [7:0] $end
$var wire 3 1# S1_AXI4_AWSIZE [2:0] $end
$var wire 1 f S1_AXI4_AWVALID $end
$var wire 1 g S1_AXI4_BREADY $end
$var wire 1 s S1_AXI4_BVALID $end
$var wire 1 h S1_AXI4_RREADY $end
$var wire 1 n S1_AXI4_RVALID $end
$var wire 32 2# S1_AXI4_WDATA [31:0] $end
$var wire 1 j S1_AXI4_WLAST $end
$var wire 4 3# S1_AXI4_WSTRB [3:0] $end
$var wire 1 l S1_AXI4_WVALID $end
$var wire 1 4# s0_read_to_cordic $end
$var wire 1 5# s0_read_to_dram $end
$var wire 1 6# s0_read_to_sa $end
$var wire 1 7# s0_write_to_cordic $end
$var wire 1 8# s0_write_to_dram $end
$var wire 1 9# s0_write_to_sa $end
$var wire 1 :# s1_read_to_dram $end
$var wire 1 ;# s1_write_to_dram $end
$var wire 1 m S1_AXI4_WREADY $end
$var wire 2 <# S1_AXI4_RRESP [1:0] $end
$var wire 1 p S1_AXI4_RLAST $end
$var wire 4 =# S1_AXI4_RID [3:0] $end
$var wire 32 ># S1_AXI4_RDATA [31:0] $end
$var wire 2 ?# S1_AXI4_BRESP [1:0] $end
$var wire 4 @# S1_AXI4_BID [3:0] $end
$var wire 1 v S1_AXI4_AWREADY $end
$var wire 1 w S1_AXI4_ARREADY $end
$var wire 1 J" S0_AXI4_WVALID $end
$var wire 4 A# S0_AXI4_WSTRB [3:0] $end
$var wire 1 L" S0_AXI4_WREADY $end
$var wire 1 M" S0_AXI4_WLAST $end
$var wire 32 B# S0_AXI4_WDATA [31:0] $end
$var wire 2 C# S0_AXI4_RRESP [1:0] $end
$var wire 1 Q" S0_AXI4_RREADY $end
$var wire 1 R" S0_AXI4_RLAST $end
$var wire 4 D# S0_AXI4_RID [3:0] $end
$var wire 32 E# S0_AXI4_RDATA [31:0] $end
$var wire 2 F# S0_AXI4_BRESP [1:0] $end
$var wire 1 W" S0_AXI4_BREADY $end
$var wire 4 G# S0_AXI4_BID [3:0] $end
$var wire 1 Y" S0_AXI4_AWVALID $end
$var wire 3 H# S0_AXI4_AWSIZE [2:0] $end
$var wire 1 [" S0_AXI4_AWREADY $end
$var wire 8 I# S0_AXI4_AWLEN [7:0] $end
$var wire 4 J# S0_AXI4_AWID [3:0] $end
$var wire 2 K# S0_AXI4_AWBURST [1:0] $end
$var wire 32 L# S0_AXI4_AWADDR [31:0] $end
$var wire 1 `" S0_AXI4_ARVALID $end
$var wire 3 M# S0_AXI4_ARSIZE [2:0] $end
$var wire 1 b" S0_AXI4_ARREADY $end
$var wire 8 N# S0_AXI4_ARLEN [7:0] $end
$var wire 4 O# S0_AXI4_ARID [3:0] $end
$var wire 2 P# S0_AXI4_ARBURST [1:0] $end
$var wire 32 Q# S0_AXI4_ARADDR [31:0] $end
$var wire 4 R# M2_AXI4_WSTRB [3:0] $end
$var wire 1 ," M2_AXI4_WREADY $end
$var wire 1 -" M2_AXI4_WLAST $end
$var wire 32 S# M2_AXI4_WDATA [31:0] $end
$var wire 1 /" M2_AXI4_RVALID $end
$var wire 2 T# M2_AXI4_RRESP [1:0] $end
$var wire 1 1" M2_AXI4_RREADY $end
$var wire 1 2" M2_AXI4_RLAST $end
$var wire 4 U# M2_AXI4_RID [3:0] $end
$var wire 32 V# M2_AXI4_RDATA [31:0] $end
$var wire 1 5" M2_AXI4_BVALID $end
$var wire 2 W# M2_AXI4_BRESP [1:0] $end
$var wire 1 7" M2_AXI4_BREADY $end
$var wire 4 X# M2_AXI4_BID [3:0] $end
$var wire 3 Y# M2_AXI4_AWSIZE [2:0] $end
$var wire 1 ;" M2_AXI4_AWREADY $end
$var wire 8 Z# M2_AXI4_AWLEN [7:0] $end
$var wire 4 [# M2_AXI4_AWID [3:0] $end
$var wire 2 \# M2_AXI4_AWBURST [1:0] $end
$var wire 32 ]# M2_AXI4_AWADDR [31:0] $end
$var wire 3 ^# M2_AXI4_ARSIZE [2:0] $end
$var wire 1 B" M2_AXI4_ARREADY $end
$var wire 8 _# M2_AXI4_ARLEN [7:0] $end
$var wire 4 `# M2_AXI4_ARID [3:0] $end
$var wire 2 a# M2_AXI4_ARBURST [1:0] $end
$var wire 32 b# M2_AXI4_ARADDR [31:0] $end
$var wire 1 { M1_AXI4LITE_RREADY $end
$var wire 1 | M1_AXI4LITE_BREADY $end
$var wire 1 j" M0_AXI4LITE_RREADY $end
$var wire 1 k" M0_AXI4LITE_BREADY $end
$var parameter 32 c# ADDR_WIDTH $end
$var parameter 32 d# AXI4_ID_WIDTH $end
$var parameter 32 e# CORDIC_END_ADDR $end
$var parameter 32 f# CORDIC_START_ADDR $end
$var parameter 32 g# DATA_WIDTH $end
$var parameter 32 h# DRAM_END_ADDR $end
$var parameter 32 i# DRAM_START_ADDR $end
$var parameter 32 j# SA_END_ADDR $end
$var parameter 32 k# SA_START_ADDR $end
$var reg 1 l# s0_dram_read_grant $end
$var reg 1 m# s0_dram_write_grant $end
$var reg 1 n# s0_read_transaction_active $end
$var reg 1 o# s0_write_transaction_active $end
$var reg 1 p# s1_dram_read_grant $end
$var reg 1 q# s1_dram_write_grant $end
$var reg 1 r# s1_read_transaction_active $end
$var reg 1 s# s1_write_transaction_active $end
$upscope $end
$scope module cpu $end
$var wire 1 D clk $end
$var wire 32 t# dbg_mem_addr [31:0] $end
$var wire 1 u# dbg_mem_instr $end
$var wire 32 v# dbg_mem_rdata [31:0] $end
$var wire 1 w# dbg_mem_ready $end
$var wire 1 x# dbg_mem_valid $end
$var wire 32 y# dbg_mem_wdata [31:0] $end
$var wire 4 z# dbg_mem_wstrb [3:0] $end
$var wire 1 {# instr_trap $end
$var wire 32 |# irq [31:0] $end
$var wire 1 }# launch_next_insn $end
$var wire 1 ~# mem_done $end
$var wire 1 !$ mem_la_firstword $end
$var wire 1 "$ mem_la_firstword_xfer $end
$var wire 1 #$ mem_la_read $end
$var wire 1 $$ mem_la_use_prefetched_high_word $end
$var wire 1 %$ mem_la_write $end
$var wire 32 &$ mem_rdata_latched [31:0] $end
$var wire 1 '$ mem_xfer $end
$var wire 32 ($ pcpi_rd [31:0] $end
$var wire 1 )$ pcpi_ready $end
$var wire 32 *$ pcpi_rs1 [31:0] $end
$var wire 32 +$ pcpi_rs2 [31:0] $end
$var wire 1 ,$ pcpi_wait $end
$var wire 1 -$ pcpi_wr $end
$var wire 1 P resetn $end
$var wire 1 .$ pcpi_mul_wr $end
$var wire 1 /$ pcpi_mul_wait $end
$var wire 1 0$ pcpi_mul_ready $end
$var wire 32 1$ pcpi_mul_rd [31:0] $end
$var wire 1 2$ pcpi_div_wr $end
$var wire 1 3$ pcpi_div_wait $end
$var wire 1 4$ pcpi_div_ready $end
$var wire 32 5$ pcpi_div_rd [31:0] $end
$var wire 32 6$ next_pc [31:0] $end
$var wire 1 &" mem_ready $end
$var wire 32 7$ mem_rdata_latched_noshuffle [31:0] $end
$var wire 32 8$ mem_rdata [31:0] $end
$var wire 32 9$ mem_la_addr [31:0] $end
$var wire 1 :$ mem_busy $end
$var wire 1 ;$ is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
$var parameter 1 <$ BARREL_SHIFTER $end
$var parameter 1 =$ CATCH_ILLINSN $end
$var parameter 1 >$ CATCH_MISALIGN $end
$var parameter 1 ?$ COMPRESSED_ISA $end
$var parameter 1 @$ ENABLE_COUNTERS $end
$var parameter 1 A$ ENABLE_COUNTERS64 $end
$var parameter 1 B$ ENABLE_DIV $end
$var parameter 1 C$ ENABLE_FAST_MUL $end
$var parameter 1 D$ ENABLE_IRQ $end
$var parameter 1 E$ ENABLE_IRQ_QREGS $end
$var parameter 1 F$ ENABLE_IRQ_TIMER $end
$var parameter 1 G$ ENABLE_MUL $end
$var parameter 1 H$ ENABLE_PCPI $end
$var parameter 1 I$ ENABLE_REGS_16_31 $end
$var parameter 1 J$ ENABLE_REGS_DUALPORT $end
$var parameter 1 K$ ENABLE_TRACE $end
$var parameter 32 L$ LATCHED_IRQ $end
$var parameter 1 M$ LATCHED_MEM_RDATA $end
$var parameter 32 N$ MASKED_IRQ $end
$var parameter 32 O$ PROGADDR_IRQ $end
$var parameter 32 P$ PROGADDR_RESET $end
$var parameter 1 Q$ REGS_INIT_ZERO $end
$var parameter 32 R$ STACKADDR $end
$var parameter 36 S$ TRACE_ADDR $end
$var parameter 36 T$ TRACE_BRANCH $end
$var parameter 36 U$ TRACE_IRQ $end
$var parameter 1 V$ TWO_CYCLE_ALU $end
$var parameter 1 W$ TWO_CYCLE_COMPARE $end
$var parameter 1 X$ TWO_STAGE_SHIFT $end
$var parameter 1 Y$ WITH_PCPI $end
$var parameter 8 Z$ cpu_state_exec $end
$var parameter 8 [$ cpu_state_fetch $end
$var parameter 8 \$ cpu_state_ld_rs1 $end
$var parameter 8 ]$ cpu_state_ld_rs2 $end
$var parameter 8 ^$ cpu_state_ldmem $end
$var parameter 8 _$ cpu_state_shift $end
$var parameter 8 `$ cpu_state_stmem $end
$var parameter 8 a$ cpu_state_trap $end
$var parameter 32 b$ irq_buserror $end
$var parameter 32 c$ irq_ebreak $end
$var parameter 32 d$ irq_timer $end
$var parameter 32 e$ irqregs_offset $end
$var parameter 32 f$ regfile_size $end
$var parameter 32 g$ regindex_bits $end
$var reg 32 h$ alu_add_sub [31:0] $end
$var reg 1 i$ alu_eq $end
$var reg 1 j$ alu_lts $end
$var reg 1 k$ alu_ltu $end
$var reg 32 l$ alu_out [31:0] $end
$var reg 1 m$ alu_out_0 $end
$var reg 1 n$ alu_out_0_q $end
$var reg 32 o$ alu_out_q [31:0] $end
$var reg 32 p$ alu_shl [31:0] $end
$var reg 32 q$ alu_shr [31:0] $end
$var reg 1 r$ alu_wait $end
$var reg 1 s$ alu_wait_2 $end
$var reg 64 t$ cached_ascii_instr [63:0] $end
$var reg 32 u$ cached_insn_imm [31:0] $end
$var reg 32 v$ cached_insn_opcode [31:0] $end
$var reg 5 w$ cached_insn_rd [4:0] $end
$var reg 5 x$ cached_insn_rs1 [4:0] $end
$var reg 5 y$ cached_insn_rs2 [4:0] $end
$var reg 1 z$ clear_prefetched_high_word $end
$var reg 1 {$ clear_prefetched_high_word_q $end
$var reg 1 |$ compressed_instr $end
$var reg 64 }$ count_cycle [63:0] $end
$var reg 64 ~$ count_instr [63:0] $end
$var reg 8 !% cpu_state [7:0] $end
$var reg 32 "% cpuregs_rs1 [31:0] $end
$var reg 32 #% cpuregs_rs2 [31:0] $end
$var reg 32 $% cpuregs_wrdata [31:0] $end
$var reg 1 %% cpuregs_write $end
$var reg 32 &% current_pc [31:0] $end
$var reg 64 '% dbg_ascii_instr [63:0] $end
$var reg 128 (% dbg_ascii_state [127:0] $end
$var reg 32 )% dbg_insn_addr [31:0] $end
$var reg 32 *% dbg_insn_imm [31:0] $end
$var reg 32 +% dbg_insn_opcode [31:0] $end
$var reg 5 ,% dbg_insn_rd [4:0] $end
$var reg 5 -% dbg_insn_rs1 [4:0] $end
$var reg 5 .% dbg_insn_rs2 [4:0] $end
$var reg 1 /% dbg_next $end
$var reg 32 0% dbg_rs1val [31:0] $end
$var reg 1 1% dbg_rs1val_valid $end
$var reg 32 2% dbg_rs2val [31:0] $end
$var reg 1 3% dbg_rs2val_valid $end
$var reg 1 4% dbg_valid_insn $end
$var reg 32 5% decoded_imm [31:0] $end
$var reg 32 6% decoded_imm_j [31:0] $end
$var reg 5 7% decoded_rd [4:0] $end
$var reg 5 8% decoded_rs [4:0] $end
$var reg 5 9% decoded_rs1 [4:0] $end
$var reg 5 :% decoded_rs2 [4:0] $end
$var reg 1 ;% decoder_pseudo_trigger $end
$var reg 1 <% decoder_pseudo_trigger_q $end
$var reg 1 =% decoder_trigger $end
$var reg 1 >% decoder_trigger_q $end
$var reg 1 ?% do_waitirq $end
$var reg 32 @% eoi [31:0] $end
$var reg 1 A% instr_add $end
$var reg 1 B% instr_addi $end
$var reg 1 C% instr_and $end
$var reg 1 D% instr_andi $end
$var reg 1 E% instr_auipc $end
$var reg 1 F% instr_beq $end
$var reg 1 G% instr_bge $end
$var reg 1 H% instr_bgeu $end
$var reg 1 I% instr_blt $end
$var reg 1 J% instr_bltu $end
$var reg 1 K% instr_bne $end
$var reg 1 L% instr_ecall_ebreak $end
$var reg 1 M% instr_fence $end
$var reg 1 N% instr_getq $end
$var reg 1 O% instr_jal $end
$var reg 1 P% instr_jalr $end
$var reg 1 Q% instr_lb $end
$var reg 1 R% instr_lbu $end
$var reg 1 S% instr_lh $end
$var reg 1 T% instr_lhu $end
$var reg 1 U% instr_lui $end
$var reg 1 V% instr_lw $end
$var reg 1 W% instr_maskirq $end
$var reg 1 X% instr_or $end
$var reg 1 Y% instr_ori $end
$var reg 1 Z% instr_rdcycle $end
$var reg 1 [% instr_rdcycleh $end
$var reg 1 \% instr_rdinstr $end
$var reg 1 ]% instr_rdinstrh $end
$var reg 1 ^% instr_retirq $end
$var reg 1 _% instr_sb $end
$var reg 1 `% instr_setq $end
$var reg 1 a% instr_sh $end
$var reg 1 b% instr_sll $end
$var reg 1 c% instr_slli $end
$var reg 1 d% instr_slt $end
$var reg 1 e% instr_slti $end
$var reg 1 f% instr_sltiu $end
$var reg 1 g% instr_sltu $end
$var reg 1 h% instr_sra $end
$var reg 1 i% instr_srai $end
$var reg 1 j% instr_srl $end
$var reg 1 k% instr_srli $end
$var reg 1 l% instr_sub $end
$var reg 1 m% instr_sw $end
$var reg 1 n% instr_timer $end
$var reg 1 o% instr_waitirq $end
$var reg 1 p% instr_xor $end
$var reg 1 q% instr_xori $end
$var reg 1 r% irq_active $end
$var reg 1 s% irq_delay $end
$var reg 32 t% irq_mask [31:0] $end
$var reg 32 u% irq_pending [31:0] $end
$var reg 2 v% irq_state [1:0] $end
$var reg 1 w% is_alu_reg_imm $end
$var reg 1 x% is_alu_reg_reg $end
$var reg 1 y% is_beq_bne_blt_bge_bltu_bgeu $end
$var reg 1 z% is_compare $end
$var reg 1 {% is_jalr $end
$var reg 1 |% is_jalr_addi_slti_sltiu_xori_ori_andi $end
$var reg 1 }% is_lb_lh_lw_lbu_lhu $end
$var reg 1 ~% is_lbu_lhu_lw $end
$var reg 1 !& is_lui_auipc_jal $end
$var reg 1 "& is_lui_auipc_jal_jalr_addi_add_sub $end
$var reg 1 #& is_sb_sh_sw $end
$var reg 1 $& is_sll_srl_sra $end
$var reg 1 %& is_slli_srli_srai $end
$var reg 1 && is_slti_blt_slt $end
$var reg 1 '& is_sltiu_bltu_sltu $end
$var reg 1 (& last_mem_valid $end
$var reg 1 )& latched_branch $end
$var reg 1 *& latched_compr $end
$var reg 1 +& latched_is_lb $end
$var reg 1 ,& latched_is_lh $end
$var reg 1 -& latched_is_lu $end
$var reg 5 .& latched_rd [4:0] $end
$var reg 1 /& latched_stalu $end
$var reg 1 0& latched_store $end
$var reg 1 1& latched_trace $end
$var reg 32 2& mem_addr [31:0] $end
$var reg 1 3& mem_do_prefetch $end
$var reg 1 4& mem_do_rdata $end
$var reg 1 5& mem_do_rinst $end
$var reg 1 6& mem_do_wdata $end
$var reg 1 (" mem_instr $end
$var reg 1 7& mem_la_firstword_reg $end
$var reg 1 8& mem_la_secondword $end
$var reg 32 9& mem_la_wdata [31:0] $end
$var reg 4 :& mem_la_wstrb [3:0] $end
$var reg 32 ;& mem_rdata_q [31:0] $end
$var reg 32 <& mem_rdata_word [31:0] $end
$var reg 2 =& mem_state [1:0] $end
$var reg 1 %" mem_valid $end
$var reg 32 >& mem_wdata [31:0] $end
$var reg 2 ?& mem_wordsize [1:0] $end
$var reg 4 @& mem_wstrb [3:0] $end
$var reg 64 A& new_ascii_instr [63:0] $end
$var reg 32 B& next_insn_opcode [31:0] $end
$var reg 32 C& next_irq_pending [31:0] $end
$var reg 32 D& pcpi_insn [31:0] $end
$var reg 32 E& pcpi_int_rd [31:0] $end
$var reg 1 F& pcpi_int_ready $end
$var reg 1 G& pcpi_int_wait $end
$var reg 1 H& pcpi_int_wr $end
$var reg 1 I& pcpi_timeout $end
$var reg 4 J& pcpi_timeout_counter [3:0] $end
$var reg 1 K& pcpi_valid $end
$var reg 1 L& prefetched_high_word $end
$var reg 64 M& q_ascii_instr [63:0] $end
$var reg 32 N& q_insn_imm [31:0] $end
$var reg 32 O& q_insn_opcode [31:0] $end
$var reg 5 P& q_insn_rd [4:0] $end
$var reg 5 Q& q_insn_rs1 [4:0] $end
$var reg 5 R& q_insn_rs2 [4:0] $end
$var reg 32 S& reg_next_pc [31:0] $end
$var reg 32 T& reg_op1 [31:0] $end
$var reg 32 U& reg_op2 [31:0] $end
$var reg 32 V& reg_out [31:0] $end
$var reg 32 W& reg_pc [31:0] $end
$var reg 5 X& reg_sh [4:0] $end
$var reg 1 Y& set_mem_do_rdata $end
$var reg 1 Z& set_mem_do_rinst $end
$var reg 1 [& set_mem_do_wdata $end
$var reg 32 \& timer [31:0] $end
$var reg 36 ]& trace_data [35:0] $end
$var reg 1 ^& trace_valid $end
$var reg 1 " trap $end
$var integer 32 _& i [31:0] $end
$scope begin genblk1 $end
$scope module pcpi_mul $end
$var wire 1 D clk $end
$var wire 1 `& mul_start $end
$var wire 32 a& pcpi_insn [31:0] $end
$var wire 32 b& pcpi_rs1 [31:0] $end
$var wire 32 c& pcpi_rs2 [31:0] $end
$var wire 1 K& pcpi_valid $end
$var wire 1 P resetn $end
$var wire 1 d& instr_rs2_signed $end
$var wire 1 e& instr_rs1_signed $end
$var wire 1 f& instr_any_mulh $end
$var wire 1 g& instr_any_mul $end
$var parameter 32 h& CARRY_CHAIN $end
$var parameter 32 i& STEPS_AT_ONCE $end
$var reg 1 j& instr_mul $end
$var reg 1 k& instr_mulh $end
$var reg 1 l& instr_mulhsu $end
$var reg 1 m& instr_mulhu $end
$var reg 7 n& mul_counter [6:0] $end
$var reg 1 o& mul_finish $end
$var reg 1 p& mul_waiting $end
$var reg 64 q& next_rd [63:0] $end
$var reg 64 r& next_rdt [63:0] $end
$var reg 64 s& next_rdx [63:0] $end
$var reg 64 t& next_rs1 [63:0] $end
$var reg 64 u& next_rs2 [63:0] $end
$var reg 32 v& pcpi_rd [31:0] $end
$var reg 1 0$ pcpi_ready $end
$var reg 1 /$ pcpi_wait $end
$var reg 1 w& pcpi_wait_q $end
$var reg 1 .$ pcpi_wr $end
$var reg 64 x& rd [63:0] $end
$var reg 64 y& rdx [63:0] $end
$var reg 64 z& rs1 [63:0] $end
$var reg 64 {& rs2 [63:0] $end
$var reg 64 |& this_rs2 [63:0] $end
$var integer 32 }& i [31:0] $end
$var integer 32 ~& j [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$scope module pcpi_div $end
$var wire 1 D clk $end
$var wire 32 !' pcpi_insn [31:0] $end
$var wire 32 "' pcpi_rs1 [31:0] $end
$var wire 32 #' pcpi_rs2 [31:0] $end
$var wire 1 K& pcpi_valid $end
$var wire 1 P resetn $end
$var wire 1 $' start $end
$var wire 1 %' instr_any_div_rem $end
$var reg 32 &' dividend [31:0] $end
$var reg 63 '' divisor [62:0] $end
$var reg 1 (' instr_div $end
$var reg 1 )' instr_divu $end
$var reg 1 *' instr_rem $end
$var reg 1 +' instr_remu $end
$var reg 1 ,' outsign $end
$var reg 32 -' pcpi_rd [31:0] $end
$var reg 1 4$ pcpi_ready $end
$var reg 1 3$ pcpi_wait $end
$var reg 1 .' pcpi_wait_q $end
$var reg 1 2$ pcpi_wr $end
$var reg 32 /' quotient [31:0] $end
$var reg 32 0' quotient_msk [31:0] $end
$var reg 1 1' running $end
$upscope $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$scope task empty_statement $end
$upscope $end
$upscope $end
$scope module cpu_axi_master $end
$var wire 1 D aclk $end
$var wire 1 P aresetn $end
$var wire 1 2' is_read $end
$var wire 1 3' is_write $end
$var wire 1 b" m_axi_arready $end
$var wire 1 [" m_axi_awready $end
$var wire 4 4' m_axi_bid [3:0] $end
$var wire 2 5' m_axi_bresp [1:0] $end
$var wire 1 U" m_axi_bvalid $end
$var wire 32 6' m_axi_rdata [31:0] $end
$var wire 4 7' m_axi_rid [3:0] $end
$var wire 1 R" m_axi_rlast $end
$var wire 2 8' m_axi_rresp [1:0] $end
$var wire 1 O" m_axi_rvalid $end
$var wire 1 L" m_axi_wready $end
$var wire 32 9' mem_addr [31:0] $end
$var wire 1 (" mem_instr $end
$var wire 1 %" mem_valid $end
$var wire 32 :' mem_wdata [31:0] $end
$var wire 4 ;' mem_wstrb [3:0] $end
$var parameter 32 <' ADDR_WIDTH $end
$var parameter 32 =' DATA_WIDTH $end
$var parameter 2 >' IDLE $end
$var parameter 32 ?' ID_WIDTH $end
$var parameter 2 @' READING $end
$var parameter 4 A' READ_ID $end
$var parameter 4 B' WRITE_ID $end
$var parameter 2 C' WRITE_RESP $end
$var parameter 2 D' WRITING $end
$var reg 1 E' aw_handshake_done $end
$var reg 2 F' debug_state_writing [1:0] $end
$var reg 32 G' m_axi_araddr [31:0] $end
$var reg 2 H' m_axi_arburst [1:0] $end
$var reg 4 I' m_axi_arid [3:0] $end
$var reg 8 J' m_axi_arlen [7:0] $end
$var reg 3 K' m_axi_arsize [2:0] $end
$var reg 1 `" m_axi_arvalid $end
$var reg 32 L' m_axi_awaddr [31:0] $end
$var reg 2 M' m_axi_awburst [1:0] $end
$var reg 4 N' m_axi_awid [3:0] $end
$var reg 8 O' m_axi_awlen [7:0] $end
$var reg 3 P' m_axi_awsize [2:0] $end
$var reg 1 Y" m_axi_awvalid $end
$var reg 1 W" m_axi_bready $end
$var reg 1 Q" m_axi_rready $end
$var reg 32 Q' m_axi_wdata [31:0] $end
$var reg 1 M" m_axi_wlast $end
$var reg 4 R' m_axi_wstrb [3:0] $end
$var reg 1 J" m_axi_wvalid $end
$var reg 32 S' mem_rdata [31:0] $end
$var reg 1 &" mem_ready $end
$var reg 2 T' state [1:0] $end
$var reg 1 U' w_handshake_done $end
$upscope $end
$scope module dram_controller_inst $end
$var wire 32 V' M2_AXI4_ARADDR [31:0] $end
$var wire 2 W' M2_AXI4_ARBURST [1:0] $end
$var wire 4 X' M2_AXI4_ARID [3:0] $end
$var wire 8 Y' M2_AXI4_ARLEN [7:0] $end
$var wire 3 Z' M2_AXI4_ARSIZE [2:0] $end
$var wire 1 @" M2_AXI4_ARVALID $end
$var wire 32 [' M2_AXI4_AWADDR [31:0] $end
$var wire 2 \' M2_AXI4_AWBURST [1:0] $end
$var wire 4 ]' M2_AXI4_AWID [3:0] $end
$var wire 8 ^' M2_AXI4_AWLEN [7:0] $end
$var wire 3 _' M2_AXI4_AWSIZE [2:0] $end
$var wire 1 9" M2_AXI4_AWVALID $end
$var wire 1 7" M2_AXI4_BREADY $end
$var wire 1 1" M2_AXI4_RREADY $end
$var wire 32 `' M2_AXI4_WDATA [31:0] $end
$var wire 1 -" M2_AXI4_WLAST $end
$var wire 4 a' M2_AXI4_WSTRB [3:0] $end
$var wire 1 *" M2_AXI4_WVALID $end
$var wire 1 D clk $end
$var wire 32 b' dram_dq [31:0] $end
$var wire 1 P rst_n $end
$var wire 1 B" M2_AXI4_ARREADY $end
$var parameter 3 c' ADDR_PHASE $end
$var parameter 32 d' ADDR_WIDTH $end
$var parameter 32 e' AXI4_ID_WIDTH $end
$var parameter 3 f' DATA_PHASE $end
$var parameter 32 g' DATA_WIDTH $end
$var parameter 3 h' IDLE $end
$var parameter 3 i' RESP_PHASE $end
$var parameter 3 j' WAIT $end
$var reg 1 ;" M2_AXI4_AWREADY $end
$var reg 4 k' M2_AXI4_BID [3:0] $end
$var reg 2 l' M2_AXI4_BRESP [1:0] $end
$var reg 1 5" M2_AXI4_BVALID $end
$var reg 32 m' M2_AXI4_RDATA [31:0] $end
$var reg 4 n' M2_AXI4_RID [3:0] $end
$var reg 1 2" M2_AXI4_RLAST $end
$var reg 2 o' M2_AXI4_RRESP [1:0] $end
$var reg 1 /" M2_AXI4_RVALID $end
$var reg 1 ," M2_AXI4_WREADY $end
$var reg 14 p' dram_addr [13:0] $end
$var reg 3 q' dram_ba [2:0] $end
$var reg 1 ) dram_cas $end
$var reg 1 ( dram_ck $end
$var reg 1 ' dram_cs $end
$var reg 1 r' dram_data_oe $end
$var reg 32 s' dram_data_out [31:0] $end
$var reg 4 t' dram_dm [3:0] $end
$var reg 1 % dram_dqs $end
$var reg 1 $ dram_ras $end
$var reg 1 # dram_we $end
$var reg 1 u' executed_status $end
$var reg 32 v' read_addr [31:0] $end
$var reg 8 w' read_count [7:0] $end
$var reg 32 x' read_data_reg [31:0] $end
$var reg 1 y' read_data_valid $end
$var reg 4 z' read_id [3:0] $end
$var reg 8 {' read_len [7:0] $end
$var reg 3 |' read_state [2:0] $end
$var reg 32 }' write_addr [31:0] $end
$var reg 8 ~' write_count [7:0] $end
$var reg 4 !( write_id [3:0] $end
$var reg 8 "( write_len [7:0] $end
$var reg 3 #( write_state [2:0] $end
$upscope $end
$upscope $end
$scope module ram $end
$var wire 14 $( addr [13:0] $end
$var wire 3 %( ba [2:0] $end
$var wire 1 ) cas $end
$var wire 1 ( clk $end
$var wire 1 ' cs $end
$var wire 4 &( dm [3:0] $end
$var wire 32 '( dq [31:0] $end
$var wire 1 % dqs $end
$var wire 14 (( mem_addr [13:0] $end
$var wire 1 $ ras $end
$var wire 1 # we $end
$var reg 32 )( data_out [31:0] $end
$var reg 32 *( debug_reg_read [31:0] $end
$var reg 32 +( debug_reg_write [31:0] $end
$var reg 1 ,( debug_status $end
$var reg 1 -( output_enable $end
$var reg 32 .( write_data [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 /( i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 0( i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 j'
b100 i'
b0 h'
b100000 g'
b10 f'
b100 e'
b100000 d'
b1 c'
b10 D'
b11 C'
b10 B'
b1 A'
b1 @'
b100 ?'
b0 >'
b100000 ='
b100000 <'
b1 i&
b100 h&
b101 g$
b100000 f$
b100000 e$
b0 d$
b1 c$
b10 b$
b10000000 a$
b10 `$
b100 _$
b1 ^$
b10000 ]$
b100000 \$
b1000000 [$
b1000 Z$
1Y$
1X$
0W$
0V$
b100000000000000000000000000000000000 U$
b100000000000000000000000000000000 T$
b1000000000000000000000000000000000 S$
b11111111111111111111111111111111 R$
1Q$
b0 P$
b10000 O$
b0 N$
1M$
b11111111111111111111111111111111 L$
0K$
0J$
1I$
0H$
1G$
1F$
1E$
0D$
0C$
1B$
1A$
1@$
0?$
1>$
1=$
0<$
b11110000000000000000000000000000 k#
b11110000000000000000000000000101 j#
b0 i#
b11101111111111111111111111111111 h#
b100000 g#
b11110000000000000000000000000110 f#
b11110000000000000000000000001001 e#
b100 d#
b100000 c#
b100 s"
b100000 r"
b100 q"
b100000 p"
$end
#0
$dumpvars
bx 0(
b10000000000000000 /(
b0 .(
0-(
0,(
b0 +(
b0 *(
b0 )(
b0 ((
bz '(
bx &(
b0 %(
b0 $(
b0 #(
bx "(
bx !(
b0 ~'
bx }'
b0 |'
bx {'
bx z'
0y'
bx x'
b0 w'
bx v'
0u'
bx t'
bx s'
0r'
b0 q'
b0 p'
b0 o'
bx n'
bx m'
b0 l'
bx k'
bz b'
b0 a'
b0 `'
b0 _'
b0 ^'
b0 ]'
b0 \'
b0 ['
b0 Z'
b0 Y'
b0 X'
b0 W'
b0 V'
0U'
b0 T'
b0 S'
b0 R'
b0 Q'
b0 P'
b0 O'
b0 N'
b0 M'
b0 L'
b0 K'
b0 J'
b0 I'
b0 H'
b0 G'
b0 F'
0E'
bx ;'
bx :'
bx 9'
b0 8'
bx 7'
bx 6'
b0 5'
b0 4'
x3'
x2'
x1'
bx 0'
bx /'
x.'
bx -'
x,'
x+'
x*'
x)'
x('
bx ''
bx &'
x%'
x$'
bx #'
bx "'
bx !'
bx ~&
bx }&
bx |&
bx {&
bx z&
bx y&
bx x&
xw&
bx v&
bx u&
bx t&
bx s&
bx r&
bx q&
xp&
xo&
bx n&
xm&
xl&
xk&
xj&
xg&
xf&
xe&
xd&
bx c&
bx b&
bx a&
x`&
b100000 _&
x^&
bx ]&
bx \&
x[&
xZ&
xY&
bx X&
bx W&
bx V&
bx U&
bx T&
bx S&
bx R&
bx Q&
bx P&
bx O&
bx N&
bx M&
xL&
xK&
bx J&
xI&
xH&
xG&
xF&
bx E&
bx D&
bx C&
bx B&
bx A&
bx @&
bx ?&
bx >&
bx =&
bx <&
bx ;&
bx :&
bx 9&
x8&
x7&
x6&
x5&
x4&
x3&
bx 2&
x1&
x0&
x/&
bx .&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
bx v%
bx u%
bx t%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
bx @%
x?%
x>%
x=%
x<%
x;%
bx :%
bx 9%
bx 8%
bx 7%
bx 6%
bx 5%
x4%
x3%
bx 2%
x1%
bx 0%
x/%
bx .%
bx -%
bx ,%
bx +%
bx *%
bx )%
bx (%
bx '%
bx &%
x%%
bx $%
bx #%
bx "%
bx !%
bx ~$
bx }$
x|$
x{$
0z$
bx y$
bx x$
bx w$
bx v$
bx u$
bx t$
xs$
xr$
bx q$
bx p$
bx o$
xn$
xm$
bx l$
xk$
xj$
xi$
bx h$
x;$
x:$
bx00 9$
b0 8$
b0 7$
bx 6$
bx 5$
x4$
x3$
x2$
bx 1$
x0$
x/$
x.$
z-$
z,$
bx +$
bx *$
z)$
bz ($
0'$
b0 &$
0%$
0$$
0#$
0"$
0!$
0~#
x}#
bz |#
x{#
bx z#
bx y#
xx#
0w#
b0 v#
xu#
bx t#
0s#
0r#
0q#
0p#
0o#
0n#
1m#
1l#
b0 b#
b0 a#
b0 `#
b0 _#
b0 ^#
b0 ]#
b0 \#
b0 [#
b0 Z#
b0 Y#
bx X#
b0 W#
bx V#
bx U#
b0 T#
b0 S#
b0 R#
b0 Q#
b0 P#
b0 O#
b0 N#
b0 M#
b0 L#
b0 K#
b0 J#
b0 I#
b0 H#
b0 G#
b0 F#
bx E#
bx D#
b0 C#
b0 B#
b0 A#
bz @#
b0 ?#
b0 >#
bz =#
b0 <#
0;#
0:#
09#
08#
07#
06#
15#
04#
bz 3#
bz 2#
bz 1#
bz 0#
bz /#
bz .#
bz -#
bz ,#
bz +#
bz *#
bz )#
bz (#
b0 '#
b0 &#
b0 %#
b0 $#
b0 ##
b0 "#
b0 !#
b0 ~"
b0 }"
b0 |"
b0 {"
b0 z"
b0 y"
b0 x"
b0 w"
b0 v"
b0 u"
b0 t"
b0 o"
0n"
b0 m"
0l"
0k"
0j"
b0 i"
b0 h"
0g"
b0 f"
b0 e"
b0 d"
b0 c"
1b"
b0 a"
0`"
b0 _"
b0 ^"
b0 ]"
b0 \"
0["
b0 Z"
0Y"
b0 X"
0W"
b0 V"
0U"
bx T"
bx S"
0R"
0Q"
b0 P"
0O"
b0 N"
0M"
0L"
b0 K"
0J"
b0 I"
b0 H"
bx G"
b0 F"
b0 E"
b0 D"
b0 C"
1B"
b0 A"
0@"
b0 ?"
b0 >"
b0 ="
b0 <"
0;"
b0 :"
09"
bx 8"
07"
b0 6"
05"
bx 4"
bx 3"
02"
01"
b0 0"
0/"
b0 ."
0-"
0,"
b0 +"
0*"
bx )"
x("
b0 '"
0&"
x%"
bx $"
bx #"
b0 ""
0!"
b0 ~
0}
0|
0{
b0 z
b0 y
0x
0w
0v
bz u
b0 t
0s
b0 r
bz q
1p
b0 o
0n
0m
0l
bz k
zj
bz i
0h
0g
0f
bz e
bz d
bz c
bz b
bz a
0`
bz _
bz ^
bz ]
bz \
bz [
0Z
0Y
b0 X
b0 W
0V
b0 U
0T
b0 S
0R
b0 Q
0P
bz O
0N
0M
b0 L
b0 K
0J
b0 I
0H
b0 G
0F
b0 E
0D
r0 C
b0 B
b1010 A
b10000000000000000000000000000011 @
b1111111100 ?
b1111111100 >
b0 =
0<
0;
b0 :
09
08
b0 7
b0 6
b0 5
04
b0 3
02
01
00
0/
0.
0-
0,
b0 +
b0 *
1)
0(
1'
bx &
x%
1$
1#
x"
bz !
$end
#5000
0}#
0f&
0e&
0g&
0$'
0%'
0F&
0H&
03'
02'
b0 A&
0:$
b110011001100101011101000110001101101000 (%
b0 6$
0%%
0m&
0l&
0d&
0k&
0j&
1p&
0o&
00$
0.$
0.'
03$
0+'
0*'
0)'
0('
01'
02$
04$
0(&
07&
0L&
08&
0x#
0%"
b0 =&
04%
0M%
0C%
0X%
0h%
0j%
0p%
0g%
0d%
0b%
0l%
0A%
0D%
0Y%
0q%
0f%
0e%
0B%
0H%
0J%
0G%
0I%
0K%
0F%
0z%
0y%
0{$
b0 u%
06&
04&
05&
03&
b1000000 !%
b0 \&
b0 @%
b0 v%
b11111111111111111111111111111111 t%
0s%
0r%
0I&
0K&
0+&
0,&
0-&
01&
0)&
0/&
00&
b0 ~$
b0 S&
b0 W&
0^&
0?%
0;%
0=%
b0 }$
b1111 J&
0s$
0r$
0"
b0 C&
0[&
0Y&
0Z&
r0.005 C
1D
1,
#10000
0D
0,
#15000
0`&
0G&
0<%
0>%
0'&
0&&
0/%
0/$
b0 C&
r0.015 C
1D
1,
#20000
0D
0,
#25000
0w&
b0 C&
r0.025 C
1D
1,
#30000
0D
0,
#35000
b0 C&
r0.035 C
1D
1,
#40000
0D
0,
#45000
b0 C&
r0.045 C
1D
1,
#50000
0D
0,
#55000
b0 C&
r0.055 C
1D
1,
#60000
0D
0,
#65000
b0 C&
r0.065 C
1D
1,
#70000
0D
0,
#75000
b0 C&
r0.075 C
1D
1,
#80000
0D
0,
#85000
b0 C&
r0.08500000000000001 C
1D
1,
#90000
0D
0,
#95000
b0 C&
r0.095 C
1D
1,
#100000
0D
0,
1P
1;
#105000
1#$
b0 9$
b1000000 ~&
b0x000x000x000x000x000x000x000x000 r&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx |&
b1 }&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0 u&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx t&
b0x000x000x000x000x000x000x000x0000 s&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx q&
b0 <&
b1111 :&
1:$
1(
0'
1;"
0m#
b11110 n&
b0 y&
b0 x&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx z&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
bx u%
b0 ?&
15&
b1 }$
b1 :
b1 B
bx &%
bx C&
r0.105 C
1D
1,
#110000
0D
0,
#115000
0#$
12'
0(
b10 }$
b1 =&
1u#
1("
1x#
1%"
b0 z#
b0 #"
b0 @&
b0 ;'
b0 t#
b0 )"
b0 2&
b0 9'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b10 B
b10 :
bx &%
r0.115 C
1D
1,
#120000
0D
0,
#125000
1@"
11"
b1 E"
b1 a#
b1 W'
b10 A"
b10 ^#
b10 Z'
b1 D"
b1 `#
b1 X'
1(
b1 T'
1Q"
1`"
b1 e"
b1 P#
b1 H'
b10 a"
b10 M#
b10 K'
b1 d"
b1 O#
b1 I'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
1(&
b11 }$
b11 :
b11 B
bx &%
r0.125 C
1D
1,
#130000
0D
0,
#135000
0b"
0@"
0`"
1n#
0B"
b1 |'
b0 {'
b0 v'
b1 z'
0(
b100 }$
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b100 B
b100 :
bx &%
r0.135 C
1D
1,
#140000
0D
0,
#145000
b111111110000000000000010010011 !
b111111110000000000000010010011 O
b111111110000000000000010010011 b'
b111111110000000000000010010011 '(
b111111110000000000000010010011 *(
1-(
b111111110000000000000010010011 )(
1,(
1(
b10 |'
0)
0$
b0xxxxxxxxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b101 }$
b101 :
b101 B
bx &%
r0.145 C
1D
1,
#150000
0D
0,
b1010 0(
#155000
0'
1y'
b111111110000000000000010010011 x'
0(
b110 }$
b0xxxxxxxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b110 B
b110 :
bx &%
r0.155 C
1D
1,
#160000
0D
0,
#165000
b111111110000000000000010010011 T"
b111111110000000000000010010011 E#
b111111110000000000000010010011 6'
1O"
1R"
b1 S"
b1 D#
b1 7'
1(
12"
1/"
b111111110000000000000010010011 4"
b111111110000000000000010010011 V#
b111111110000000000000010010011 m'
b1 3"
b1 U#
b1 n'
b0xxxxxxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b111 }$
b111 :
b111 B
bx &%
r0.165 C
1D
1,
#170000
0D
0,
#175000
1~#
1b"
1'$
0O"
01"
b111111110000000000000010010011 &$
b111111110000000000000010010011 7$
b111111110000000000000010010011 <&
0R"
b0 T'
0Q"
1w#
1&"
b111111110000000000000010010011 v#
b111111110000000000000010010011 '"
b111111110000000000000010010011 8$
b111111110000000000000010010011 S'
0n#
02"
0/"
1B"
b0 |'
0y'
b100 v'
b1 w'
0(
b1000 }$
b0xxxxxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b1000 B
b1000 :
bx &%
r0.175 C
1D
1,
#180000
0D
0,
#185000
0~#
1@"
0'$
bx00 9$
1}#
11"
02'
b0 #%
b0 "%
b0 8%
0:$
1(
b1 T'
1Q"
1`"
0w#
0&"
b0 =&
0x#
0%"
b0xxxxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
0(&
b111111110000000000000010010011 B&
b111111110000000000000010010011 ;&
0|$
b11100 :%
b0 9%
b1 7%
b1111111100 6%
0x%
1w%
0#&
0}%
0o%
0^%
0P%
0O%
0E%
0U%
05&
1=%
b1001 }$
b1001 :
b1001 B
bx &%
r0.185 C
1D
1,
#190000
0D
0,
#195000
1#$
0b"
0{#
0@"
b100 9$
0}#
b0 8%
b11011000110010001011111011100100111001100110001 (%
1:$
b100 6$
0;$
b1100001011001000110010001101001 A&
b1 ,%
b11100 .%
b0 -%
b1111111100 *%
b111111110000000000000010010011 +%
b1100001011001000110010001101001 '%
0`"
1n#
0B"
b1 |'
b0 w'
b0 v'
0(
b100000 !%
13&
b1 ~$
b100 S&
0*&
b1 .&
1>%
0=%
b1010 }$
03%
01%
b1111111100 5%
0$&
1|%
0%&
0n%
0W%
0`%
0N%
0L%
0]%
0\%
0[%
0Z%
0i%
0k%
0c%
1B%
0m%
0a%
0_%
0T%
0R%
0V%
0S%
0Q%
b111111110000000000000010010011 D&
b111111110000000000000010010011 a&
b111111110000000000000010010011 !'
0{%
0"&
0!&
b0 )%
14%
1/%
b0xxxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b1010 B
b1010 :
bx &%
r0.195 C
1D
1,
#200000
0D
0,
#205000
0#$
12'
b0 8%
b1100101011110000110010101100011 (%
b1111111100 l$
b1111111100 9&
b0 q$
b0 p$
1k$
1j$
0i$
b1111111100 h$
1(
b10 |'
b1 =&
1x#
1%"
b100 t#
b100 )"
b100 2&
b100 9'
b0xxxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b1 w$
b11100 y$
b0 x$
b111111110000000000000010010011 v$
b1111111100 u$
b1100001011001000110010001101001 t$
0/%
b1 P&
b11100 R&
b0 Q&
b111111110000000000000010010011 O&
b1111111100 N&
b1100001011001000110010001101001 M&
0~%
1"&
b1000 !%
15&
b1111111100 +$
b1111111100 c&
b1111111100 #'
b1111111100 U&
11%
b0 0%
b0 *$
b0 b&
b0 "'
b0 T&
0>%
b1011 }$
b1011 :
b1011 B
r0.205 C
1D
1,
#210000
0D
0,
#215000
b0 8%
b110011001100101011101000110001101101000 (%
1%%
b1111111100 $%
b1000000 ~&
b0 r&
b0 |&
b1 }&
b11111111000 u&
b0 t&
b0 s&
b0 q&
0'
1y'
0(
b1000000 !%
1/&
10&
b1111111100 V&
b1100 }$
b1111111100 o$
1(&
b0xxxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b1111111100 {&
b0 z&
b1100 B
b1100 :
r0.215 C
1D
1,
#220000
0D
0,
#225000
1O"
1R"
b0 8%
bx $%
0%%
1(
12"
1/"
b0xxxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
0/&
00&
b100 W&
b1101 }$
bx V&
b1101 :
b1101 B
bx &%
r0.225 C
1D
1,
#230000
0D
0,
#235000
1~#
1b"
1'$
0O"
01"
0R"
b0 T'
0Q"
1w#
1&"
0n#
02"
0/"
1B"
b0 |'
0y'
b100 v'
b1 w'
0(
b1110 }$
b0xxxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b1110 B
b100 7
18
b1110 :
bx &%
1-
r0.235 C
1D
1,
#240000
0D
0,
#245000
0~#
1@"
0'$
b0 9$
1}#
11"
b100 F"
b100 b#
b100 V'
02'
0:$
1(
b1 T'
1Q"
1`"
b100 ""
b100 }"
b100 o"
b100 t"
b100 f"
b100 Q#
b100 G'
0w#
0&"
b0 =&
0x#
0%"
b0xxxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
0(&
05&
03&
1=%
b1111 }$
b1111 :
b1111 B
bx &%
r0.245 C
1D
1,
#250000
0D
0,
#255000
1#$
0b"
0@"
b1000 9$
0}#
b0 8%
b11011000110010001011111011100100111001100110001 (%
1:$
b1000 6$
bx l$
0`"
1n#
0B"
b1 |'
b0 w'
0(
b100000 !%
13&
b10 ~$
b1000 S&
1>%
0=%
b10000 }$
01%
bx 0%
0"&
b100 )%
1/%
b0xxxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b10000 B
b10000 :
bx &%
r0.255 C
1D
1,
#260000
0D
0,
#265000
b1010000000100011 !
b1010000000100011 O
b1010000000100011 b'
b1010000000100011 '(
b1010000000100011 *(
b1010000000100011 )(
0#$
12'
b0 8%
b1100101011110000110010101100011 (%
b1111111100 l$
1(
b10 |'
b1 ((
b1 +
b1 I"
b1 p'
b1 $(
b1 =&
1x#
1%"
b1000 t#
b1000 )"
b1000 2&
b1000 9'
b0xxxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
0/%
1"&
b1000 !%
15&
11%
b0 0%
b1111111100 +$
b1111111100 c&
b1111111100 #'
b1111111100 U&
b0 *$
b0 b&
b0 "'
b0 T&
0>%
b10001 }$
bx o$
b10001 :
b10001 B
r0.265 C
1D
1,
#270000
0D
0,
#275000
b0 8%
b110011001100101011101000110001101101000 (%
1%%
b1111111100 $%
0'
1y'
b1010000000100011 x'
0(
b1000000 !%
1/&
10&
b10000000000 V&
b10010 }$
b1111111100 o$
1(&
b0xxxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b10010 B
b10010 :
r0.275 C
1D
1,
#280000
0D
0,
#285000
b1010000000100011 T"
b1010000000100011 E#
b1010000000100011 6'
1O"
1R"
bx $%
0%%
1(
12"
1/"
b1010000000100011 4"
b1010000000100011 V#
b1010000000100011 m'
b0xxxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
0/&
00&
b1000 W&
b10011 }$
bx V&
b10011 :
b10011 B
bx &%
r0.285 C
1D
1,
#290000
0D
0,
#295000
1~#
1b"
1'$
0O"
01"
b1010000000100011 &$
b1010000000100011 7$
b1010000000100011 <&
0R"
b0 T'
0Q"
1w#
1&"
b1010000000100011 v#
b1010000000100011 '"
b1010000000100011 8$
b1010000000100011 S'
0n#
02"
0/"
1B"
b0 |'
0y'
b1000 v'
b1 w'
0(
b10100 }$
b0xxxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b10100 B
b1000 7
b10100 :
bx &%
11
r0.295 C
1D
1,
#300000
0D
0,
#305000
0~#
1@"
0'$
b0 9$
1}#
11"
b1000 F"
b1000 b#
b1000 V'
02'
b1111111100 #%
b1111111100 "%
b1 8%
0:$
1(
b1 T'
1Q"
1`"
b1000 ""
b1000 }"
b1000 o"
b1000 t"
b1000 f"
b1000 Q#
b1000 G'
0w#
0&"
b0 =&
0x#
0%"
b0xxxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
0(&
b1010000000100011 B&
b1010000000100011 ;&
b0 :%
b1 9%
b0 7%
b1010000000000000 6%
0w%
1#&
05&
03&
1=%
b10101 }$
b10101 :
b10101 B
bx &%
r0.305 C
1D
1,
#310000
0D
0,
#315000
1#$
0b"
0@"
b1100 9$
0}#
b111001101110111 '%
b1 8%
b11011000110010001011111011100100111001100110001 (%
1:$
b1100 6$
bx l$
b111001101110111 A&
b0 ,%
b0 .%
b1 -%
b0 *%
b1010000000100011 +%
0`"
1n#
0B"
b1 |'
b0 w'
0(
b100000 !%
13&
b11 ~$
b1100 S&
b0 .&
1>%
0=%
b10110 }$
01%
bx 0%
b0 5%
0"&
0|%
0B%
1m%
b1010000000100011 D&
b1010000000100011 a&
b1010000000100011 !'
b1000 )%
1/%
b0xxxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b10110 B
b10110 :
bx &%
r0.315 C
1D
1,
#320000
0D
0,
#325000
b1010000100000011 !
b1010000100000011 O
b1010000100000011 b'
b1010000100000011 '(
b1010000100000011 *(
b1010000100000011 )(
0#$
12'
b0 #%
b0 "%
b0 8%
b11011000110010001011111011100100111001100110010 (%
bx 9&
bx q$
bx p$
xk$
xj$
xi$
bx h$
1(
b10 |'
b10 ((
b10 +
b10 I"
b10 p'
b10 $(
b1 =&
1x#
1%"
b1100 t#
b1100 )"
b1100 2&
b1100 9'
b0xxxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b0 w$
b0 y$
b1 x$
b1010000000100011 v$
b0 u$
b111001101110111 t$
0/%
b0 P&
b0 R&
b1 Q&
b1010000000100011 O&
b0 N&
b111001101110111 M&
b10000 !%
11%
b1111111100 0%
bx +$
bx c&
bx #'
bx U&
b1111111100 *$
b1111111100 b&
b1111111100 "'
b1111111100 T&
0>%
b10111 }$
bx o$
b10111 :
b10111 B
r0.325 C
1D
1,
#330000
0D
0,
#335000
b1111111100 #%
b1111111100 "%
b1 8%
b111001101110100011011010110010101101101 (%
b0 9&
b1111111100 q$
b1111111100 p$
0k$
0j$
0i$
b1111111100 h$
b1000000 ~&
b1 }&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0 u&
b111111110 t&
0'
1y'
b1010000100000011 x'
0(
15&
b10 !%
13%
b0 2%
b0 +$
b0 c&
b0 #'
b0 U&
b0 X&
b11000 }$
1(&
b0xxxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {&
b1111111100 z&
b11000 B
b11000 :
r0.335 C
1D
1,
#340000
0D
0,
#345000
b1010000100000011 T"
b1010000100000011 E#
b1010000100000011 6'
1O"
1R"
b1000000 ~&
b1 }&
b0 u&
b111111110 t&
1(
12"
1/"
b1010000100000011 4"
b1010000100000011 V#
b1010000100000011 m'
b0 {&
b0xxxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b11001 }$
bx X&
b11001 :
b11001 B
r0.345 C
1D
1,
#350000
0D
0,
#355000
1~#
1b"
1'$
0O"
01"
b1010000100000011 &$
b1010000100000011 7$
b1010000100000011 <&
0R"
b0 T'
0Q"
1w#
1&"
b1010000100000011 v#
b1010000100000011 '"
b1010000100000011 8$
b1010000100000011 S'
0n#
02"
0/"
1B"
b0 |'
0y'
b1100 v'
b1 w'
0(
b11010 }$
b0xxxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b11010 B
b11010 :
r0.355 C
1D
1,
#360000
0D
0,
#365000
0~#
1@"
1%$
0'$
b1111111100 9$
11"
b1100 F"
b1100 b#
b1100 V'
02'
1(
b1 T'
1Q"
1`"
b1100 ""
b1100 }"
b1100 o"
b1100 t"
b1100 f"
b1100 Q#
b1100 G'
0w#
0&"
b0 =&
0x#
0%"
b0xxxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
0(&
b1010000100000011 B&
b1010000100000011 ;&
b10 7%
0#&
1}%
16&
05&
03&
1=%
b11011 }$
b11011 :
b11011 B
1[&
r0.365 C
1D
1,
#370000
0D
0,
#375000
0b"
0@"
0%$
b110110001110111 A&
13'
0`"
1n#
0B"
b1 |'
b0 w'
0(
1>%
0=%
b11100 }$
0m%
1V%
b1010000100000011 D&
b1010000100000011 a&
b1010000100000011 !'
b0xxxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b10 =&
0u#
0("
1x#
1%"
b0 y#
b0 $"
b0 >&
b0 :'
b1111 z#
b1111 #"
b1111 @&
b1111 ;'
b1111111100 t#
b1111111100 )"
b1111111100 2&
b1111111100 9'
b11100 B
b11100 :
0[&
r0.375 C
1D
1,
#380000
0D
0,
#385000
b100010000000100010011 !
b100010000000100010011 O
b100010000000100010011 b'
b100010000000100010011 '(
b100010000000100010011 *(
b100010000000100010011 )(
1(
b10 |'
b11 ((
b11 +
b11 I"
b11 p'
b11 $(
b0xxx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
1(&
b10 w$
b1010000100000011 v$
b110110001110111 t$
1~%
0>%
b11101 }$
b11101 :
b11101 B
r0.385 C
1D
1,
#390000
0D
0,
#395000
0'
1y'
b100010000000100010011 x'
0(
b11110 }$
b0xx 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b11110 B
b11110 :
r0.395 C
1D
1,
#400000
0D
0,
#405000
b100010000000100010011 T"
b100010000000100010011 E#
b100010000000100010011 6'
1O"
1R"
1(
12"
1/"
b100010000000100010011 4"
b100010000000100010011 V#
b100010000000100010011 m'
b0x 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b11111 }$
b11111 :
b11111 B
r0.405 C
1D
1,
#410000
0D
0,
#415000
1~#
1b"
1'$
0O"
01"
b100010000000100010011 &$
b100010000000100010011 7$
b100010000000100010011 <&
0R"
b0 T'
0Q"
1w#
1&"
b100010000000100010011 v#
b100010000000100010011 '"
b100010000000100010011 8$
b100010000000100010011 S'
0n#
02"
0/"
1B"
b0 |'
0y'
b10000 v'
b1 w'
0(
b100000 }$
b0 0'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b100000 B
b100000 :
r0.415 C
1D
1,
#420000
0D
0,
#425000
0~#
18#
0'$
1}#
b10 X"
b10 G#
b10 4'
03'
0:$
b1 8%
b110011001100101011101000110001101101000 (%
1(
b10 T'
b1 F'
1W"
1J"
1M"
b1111 y
b1111 '#
b1111 h"
b1111 |"
b1111 K"
b1111 A#
b1111 R'
1Y"
b1 ^"
b1 K#
b1 M'
b10 Z"
b10 H#
b10 P'
b1111111100 ~
b1111111100 !#
b1111111100 m"
b1111111100 v"
b1111111100 _"
b1111111100 L#
b1111111100 L'
b10 ]"
b10 J#
b10 N'
0w#
0&"
b0 =&
0x#
0%"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
0(&
b100010000000100010011 B&
b100010000000100010011 ;&
06&
1;%
1=%
b1000000 !%
b100001 }$
b100010000000100010011 5
14
1<
b100001 :
b100001 B
r0.425 C
1D
1,
#430000
0D
0,
#435000
1#$
1["
1*"
bx X"
bx G#
bx 4'
19"
b10000 9$
0}#
b10 ="
b10 [#
b10 ]'
b1111111100 ?"
b1111111100 ]#
b1111111100 ['
b10 :"
b10 Y#
b10 _'
b1 >"
b1 \#
b1 \'
b1111 +"
b1111 R#
b1111 a'
1-"
17"
b1 8%
b11011000110010001011111011100100111001100110001 (%
1:$
b10000 6$
b10 ,%
b1010000100000011 +%
b110110001110111 '%
1m#
0(
b100000 !%
13&
b100 ~$
b10000 S&
b10 .&
b1100 W&
1<%
0;%
1>%
0=%
b100010 }$
03%
01%
bx 2%
bx 0%
b1100 )%
1/%
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b100010 B
b100010 :
bx &%
r0.435 C
1D
1,
#440000
0D
0,
#445000
09"
0*"
b10 X"
b10 G#
b10 4'
0#$
1L"
0["
08#
12'
b1 8%
b110110001100100011011010110010101101101 (%
bx 9&
bx q$
bx p$
xk$
xj$
xi$
bx h$
1(
1,"
0;"
b10 #(
b0 "(
b1111111100 }'
b10 !(
1o#
1E'
b10 F'
0Y"
b1 =&
1u#
1("
1x#
1%"
b0 z#
b0 #"
b0 @&
b0 ;'
b10000 t#
b10000 )"
b10000 2&
b10000 9'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b100010000000100010011 v$
0/%
b10 P&
b1010000100000011 O&
b110110001110111 M&
15&
b1 !%
11%
b1111111100 0%
bx +$
bx c&
bx #'
bx U&
b1111111100 *$
b1111111100 b&
b1111111100 "'
b1111111100 T&
0<%
0>%
b100011 }$
b1100 7
b100011 :
b100011 B
r0.445 C
10
1D
1,
#450000
0D
0,
#455000
b0x000x0000000x000x00xx !
b0x000x0000000x000x00xx O
b0x000x0000000x000x00xx b'
b0x000x0000000x000x00xx '(
b1000000 ~&
b1 }&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0 u&
b111111110 t&
1U'
b11 F'
0J"
b11 #(
b10000000000 }'
b1 ~'
b0 &
b0 G"
b0 t'
b0 &(
1r'
b0 s'
b11111111 ((
b11111111 +
b11111111 I"
b11111111 p'
b11111111 $(
1u'
0#
0(
10&
b100100 }$
1(&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxx ''
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {&
b100100 B
b100100 :
r0.455 C
1D
1,
#460000
0D
0,
#465000
b0 !
b0 O
b0 b'
b0 '(
0-(
1(
b0 F'
b11 T'
b0xxxxxxxxxxxxxxxxxxxxxxxxxx ''
b100101 }$
b100101 :
b100101 B
r0.465 C
1D
1,
#470000
0D
0,
#475000
0(
0u'
b100110 }$
b0xxxxxxxxxxxxxxxxxxxxxxxxx ''
b100110 B
b100110 :
r0.475 C
1D
1,
#480000
0D
0,
#485000
0L"
1(
0,"
b100 #(
b0xxxxxxxxxxxxxxxxxxxxxxxx ''
b100111 }$
b100111 :
b100111 B
r0.485 C
1D
1,
#490000
0D
0,
#495000
1U"
bz !
bz O
bz b'
bz '(
15"
b10 8"
b10 X#
b10 k'
1#
0r'
1'
0(
b101000 }$
b0xxxxxxxxxxxxxxxxxxxxxxx ''
b101000 B
b101000 :
r0.495 C
1D
1,
#500000
0D
0,
#505000
0,(
1~#
0U"
1'$
07"
1(
b0 #(
05"
0o#
b0 T'
0W"
1w#
1&"
b0xxxxxxxxxxxxxxxxxxxxxx ''
b101001 }$
b101001 :
b101001 B
r0.505 C
1D
1,
#510000
0D
0,
#515000
0~#
1#$
1@"
0'$
b1111111100 9$
11"
b10000 F"
b10000 b#
b10000 V'
b0 ="
b0 [#
b0 ]'
b0 ?"
b0 ]#
b0 ['
b0 :"
b0 Y#
b0 _'
b0 >"
b0 \#
b0 \'
b0 +"
b0 R#
b0 a'
0-"
02'
b0 #%
b0 "%
b10 8%
b1 T'
1Q"
1`"
b10000 ""
b10000 }"
b10000 o"
b10000 t"
b10000 f"
b10000 Q#
b10000 G'
0U'
0E'
0w#
0&"
0m#
0'
1;"
0(
b0 =&
0x#
0%"
14&
05&
03&
1-&
1=%
b101010 }$
b1 :%
b10 9%
b10000100000000000 6%
1w%
0}%
0(&
b0xxxxxxxxxxxxxxxxxxxxx ''
b101010 B
b101010 :
1Y&
r0.515 C
1D
1,
#520000
0D
0,
#525000
b0 !
b0 O
b0 b'
b0 '(
b0 *(
1-(
b0 )(
1,(
0b"
0#$
0@"
b1100001011001000110010001101001 A&
12'
1(
0B"
b1 |'
b0 w'
1n#
0`"
b0xxxxxxxxxxxxxxxxxxxx ''
b1 5%
1|%
1B%
0V%
b100010000000100010011 D&
b100010000000100010011 a&
b100010000000100010011 !'
1>%
0=%
b101011 }$
b1 =&
0u#
0("
1x#
1%"
b1111111100 t#
b1111111100 )"
b1111111100 2&
b1111111100 9'
b101011 :
b101011 B
0Y&
r0.525 C
1D
1,
#530000
0D
0,
#535000
b10 |'
b100 ((
b100 +
b100 I"
b100 p'
b100 $(
0(
0>%
b101100 }$
0~%
1"&
b1 y$
b10 x$
b1 u$
b1100001011001000110010001101001 t$
1(&
b0xxxxxxxxxxxxxxxxxxx ''
b101100 B
b101100 :
r0.535 C
1D
1,
#540000
0D
0,
#545000
bz !
bz O
bz b'
bz '(
0-(
0,(
1(
1'
1y'
b0 x'
b0xxxxxxxxxxxxxxxxxx ''
b101101 }$
b101101 :
b101101 B
r0.545 C
1D
1,
#550000
0D
0,
#555000
b0 T"
b0 E#
b0 6'
1O"
1R"
0'
12"
1/"
b0 4"
b0 V#
b0 m'
0(
b101110 }$
b0xxxxxxxxxxxxxxxxx ''
b101110 B
b101110 :
r0.555 C
1D
1,
#560000
0D
0,
#565000
b1000001010000000100011 !
b1000001010000000100011 O
b1000001010000000100011 b'
b1000001010000000100011 '(
b1000001010000000100011 *(
1-(
b1000001010000000100011 )(
1,(
1~#
1b"
0O"
1'$
0R"
01"
b0 &$
b0 7$
b0 <&
1(
02"
0/"
1B"
b0 |'
0y'
b10100 v'
b1 w'
0n#
b0 T'
0Q"
1w#
1&"
b0 v#
b0 '"
b0 8$
b0 S'
b0xxxxxxxxxxxxxxxx ''
b101111 }$
b101111 :
b101111 B
r0.5649999999999999 C
1D
1,
#570000
0D
0,
#575000
0~#
1@"
0'$
1}#
11"
b1111111100 F"
b1111111100 b#
b1111111100 V'
02'
0:$
b10 8%
b110011001100101011101000110001101101000 (%
1%%
b0 $%
b1 T'
1Q"
1`"
b1111111100 ""
b1111111100 }"
b1111111100 o"
b1111111100 t"
b1111111100 f"
b1111111100 Q#
b1111111100 G'
0w#
0&"
0(
b0 =&
0x#
0%"
04&
b1000000 !%
1;%
1=%
b0 V&
b110000 }$
b0 B&
b0 ;&
0(&
b0xxxxxxxxxxxxxxx ''
b110000 B
b0 5
b110000 :
r0.575 C
1D
1,
#580000
0D
0,
#585000
1#$
0b"
0@"
b10100 9$
0}#
b10 8%
b11011000110010001011111011100100111001100110001 (%
1:$
b10100 6$
b1 .%
b10 -%
b100010000000100010011 +%
b1 *%
b1100001011001000110010001101001 '%
bx $%
0%%
1(
0B"
b1 |'
b0 w'
b1111111100 v'
1n#
0`"
b0xxxxxxxxxxxxxx ''
b10000 )%
1/%
b100000 !%
13&
b101 ~$
b10100 S&
0-&
00&
b10000 W&
1<%
0;%
1>%
0=%
b110001 }$
01%
bx 0%
bx V&
b110001 :
b110001 B
bx &%
r0.585 C
1D
1,
#590000
0D
0,
#595000
0#$
12'
b10 8%
b1100101011110000110010101100011 (%
b1 l$
b1 9&
b0 q$
b0 p$
1k$
1j$
0i$
b1 h$
b10 |'
b11111111 ((
b11111111 +
b11111111 I"
b11111111 p'
b11111111 $(
0(
b1 =&
1u#
1("
1x#
1%"
b10100 t#
b10100 )"
b10100 2&
b10100 9'
b1000 !%
15&
b1 +$
b1 c&
b1 #'
b1 U&
11%
b0 0%
b0 *$
b0 b&
b0 "'
b0 T&
0<%
0>%
b110010 }$
b0 v$
0/%
b1 R&
b10 Q&
b100010000000100010011 O&
b1 N&
b1100001011001000110010001101001 M&
b0xxxxxxxxxxxxx ''
b110010 B
b10000 7
b110010 :
1.
r0.595 C
1D
1,
#600000
0D
0,
#605000
bz !
bz O
bz b'
bz '(
0-(
0,(
b1000000 ~&
b1 }&
b10 u&
b0 t&
b10 8%
b110011001100101011101000110001101101000 (%
1%%
b1 $%
1(
1'
1y'
b1000001010000000100011 x'
b1 {&
b0 z&
b0xxxxxxxxxxxx ''
1(&
b1000000 !%
1/&
10&
b10001 V&
b110011 }$
b1 o$
b110011 :
b110011 B
r0.605 C
1D
1,
#610000
0D
0,
#615000
b1000001010000000100011 T"
b1000001010000000100011 E#
b1000001010000000100011 6'
1O"
1R"
bx $%
0%%
b1 #%
b1 "%
b10 8%
0'
12"
1/"
b1000001010000000100011 4"
b1000001010000000100011 V#
b1000001010000000100011 m'
0(
0/&
00&
b10100 W&
b110100 }$
bx V&
b0xxxxxxxxxxx ''
b110100 B
b110100 :
bx &%
r0.615 C
1D
1,
#620000
0D
0,
#625000
b0 !
b0 O
b0 b'
b0 '(
b0 *(
1-(
b0 )(
1,(
1~#
1b"
0O"
1'$
0R"
01"
b1000001010000000100011 &$
b1000001010000000100011 7$
b1000001010000000100011 <&
1(
02"
0/"
1B"
b0 |'
0y'
b10000000000 v'
b1 w'
0n#
b0 T'
0Q"
1w#
1&"
b1000001010000000100011 v#
b1000001010000000100011 '"
b1000001010000000100011 8$
b1000001010000000100011 S'
b0xxxxxxxxxx ''
b110101 }$
b10100 7
b110101 :
b110101 B
bx &%
r0.625 C
12
1D
1,
#630000
0D
0,
#635000
0~#
1@"
0'$
b0 9$
1}#
11"
b10100 F"
b10100 b#
b10100 V'
02'
0:$
b1111111100 #%
b1111111100 "%
b1 8%
b1 T'
1Q"
1`"
b10100 ""
b10100 }"
b10100 o"
b10100 t"
b10100 f"
b10100 Q#
b10100 G'
0w#
0&"
0(
b0 =&
0x#
0%"
05&
03&
1=%
b110110 }$
b10 :%
b1 9%
b0 7%
b1010000000000010 6%
0w%
1#&
b1000001010000000100011 B&
b1000001010000000100011 ;&
0(&
b0xxxxxxxxx ''
b110110 B
b110110 :
bx &%
r0.635 C
1D
1,
#640000
0D
0,
#645000
1#$
0b"
0@"
b11000 9$
0}#
b0 ,%
b10 .%
b1 -%
b0 *%
b1000001010000000100011 +%
b111001101110111 '%
bx l$
b111001101110111 A&
b1 8%
b11011000110010001011111011100100111001100110001 (%
1:$
b11000 6$
1(
0B"
b1 |'
b0 w'
b10100 v'
1n#
0`"
b0xxxxxxxx ''
b10100 )%
1/%
b0 5%
0"&
0|%
0B%
1m%
b1000001010000000100011 D&
b1000001010000000100011 a&
b1000001010000000100011 !'
b100000 !%
13&
b110 ~$
b11000 S&
b0 .&
1>%
0=%
b110111 }$
01%
bx 0%
b110111 :
b110111 B
bx &%
r0.645 C
1D
1,
#650000
0D
0,
#655000
0#$
12'
b1 #%
b1 "%
b10 8%
b11011000110010001011111011100100111001100110010 (%
bx 9&
bx q$
bx p$
xk$
xj$
xi$
bx h$
b10 |'
b101 ((
b101 +
b101 I"
b101 p'
b101 $(
0(
b1 =&
1x#
1%"
b11000 t#
b11000 )"
b11000 2&
b11000 9'
b10000 !%
11%
b1111111100 0%
bx +$
bx c&
bx #'
bx U&
b1111111100 *$
b1111111100 b&
b1111111100 "'
b1111111100 T&
0>%
b111000 }$
bx o$
b0 w$
b10 y$
b1 x$
b1000001010000000100011 v$
b0 u$
b111001101110111 t$
0/%
b0 P&
b10 R&
b1 Q&
b1000001010000000100011 O&
b0 N&
b111001101110111 M&
b0xxxxxxx ''
b111000 B
b111000 :
r0.655 C
1D
1,
#660000
0D
0,
#665000
bz !
bz O
bz b'
bz '(
0-(
0,(
b1000000 ~&
b1 }&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0 u&
b111111110 t&
b1111111100 #%
b1111111100 "%
b1 8%
b111001101110100011011010110010101101101 (%
b1 9&
b111111110 q$
b11111111000 p$
0k$
0j$
0i$
b1111111101 h$
1(
1'
1y'
b0 x'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {&
b1111111100 z&
b0xxxxxx ''
1(&
15&
b10 !%
13%
b1 2%
b1 +$
b1 c&
b1 #'
b1 U&
b1 X&
b111001 }$
b111001 :
b111001 B
r0.665 C
1D
1,
#670000
0D
0,
#675000
b0 T"
b0 E#
b0 6'
1O"
1R"
b1000000 ~&
b1 }&
b10 u&
b111111110 t&
0'
12"
1/"
b0 4"
b0 V#
b0 m'
0(
b111010 }$
bx X&
b0xxxxx ''
b1 {&
b111010 B
b111010 :
r0.675 C
1D
1,
#680000
0D
0,
#685000
b11111111010111111111000001101111 !
b11111111010111111111000001101111 O
b11111111010111111111000001101111 b'
b11111111010111111111000001101111 '(
b11111111010111111111000001101111 *(
1-(
b11111111010111111111000001101111 )(
1,(
1~#
1b"
0O"
1'$
0R"
01"
b0 &$
b0 7$
b0 <&
1(
02"
0/"
1B"
b0 |'
0y'
b11000 v'
b1 w'
0n#
b0 T'
0Q"
1w#
1&"
b0 v#
b0 '"
b0 8$
b0 S'
b0xxxx ''
b111011 }$
b111011 :
b111011 B
r0.6850000000000001 C
1D
1,
#690000
0D
0,
#695000
0~#
1@"
1%$
0'$
b1111111100 9$
11"
b11000 F"
b11000 b#
b11000 V'
02'
b0 #%
b0 "%
b0 8%
b1 T'
1Q"
1`"
b11000 ""
b11000 }"
b11000 o"
b11000 t"
b11000 f"
b11000 Q#
b11000 G'
0w#
0&"
0(
b0 =&
0x#
0%"
16&
05&
03&
1=%
b111100 }$
b0 :%
b0 9%
b0 6%
0#&
b0 B&
b0 ;&
0(&
b0xxx ''
b111100 B
b111100 :
1[&
r0.695 C
1D
1,
#700000
0D
0,
#705000
0b"
1{#
0@"
0%$
b0 A&
13'
1(
0B"
b1 |'
b0 w'
1n#
0`"
b0xx ''
b0x 5%
0m%
b0 D&
b0 a&
b0 !'
1>%
0=%
b111101 }$
b10 =&
0u#
0("
1x#
1%"
b1 y#
b1 $"
b1 >&
b1 :'
b1111 z#
b1111 #"
b1111 @&
b1111 ;'
b1111111100 t#
b1111111100 )"
b1111111100 2&
b1111111100 9'
b111101 :
b111101 B
0[&
r0.705 C
1D
1,
#710000
0D
0,
#715000
b10 |'
b110 ((
b110 +
b110 I"
b110 p'
b110 $(
0(
0>%
b111110 }$
b0 y$
b0 x$
b0 v$
b0x u$
b0 t$
1(&
b0x ''
b111110 B
b111110 :
r0.715 C
1D
1,
#720000
0D
0,
#725000
bz !
bz O
bz b'
bz '(
0-(
0,(
1(
1'
1y'
b11111111010111111111000001101111 x'
b0 ''
b111111 }$
b111111 :
b111111 B
r0.725 C
1D
1,
#730000
0D
0,
#735000
b11111111010111111111000001101111 T"
b11111111010111111111000001101111 E#
b11111111010111111111000001101111 6'
1O"
1R"
0'
12"
1/"
b11111111010111111111000001101111 4"
b11111111010111111111000001101111 V#
b11111111010111111111000001101111 m'
0(
b1000000 }$
b1000000 B
b1000000 :
r0.735 C
1D
1,
#740000
0D
0,
#745000
b0 !
b0 O
b0 b'
b0 '(
b0 *(
1-(
b0 )(
1,(
1~#
1b"
0O"
1'$
0R"
01"
b11111111010111111111000001101111 &$
b11111111010111111111000001101111 7$
b11111111010111111111000001101111 <&
1(
02"
0/"
1B"
b0 |'
0y'
b11100 v'
b1 w'
0n#
b0 T'
0Q"
1w#
1&"
b11111111010111111111000001101111 v#
b11111111010111111111000001101111 '"
b11111111010111111111000001101111 8$
b11111111010111111111000001101111 S'
b1000001 }$
b1000001 :
b1000001 B
r0.745 C
1D
1,
#750000
0D
0,
#755000
0~#
18#
0'$
1}#
03'
0:$
b0 8%
b110011001100101011101000110001101101000 (%
b10 T'
b1 F'
1W"
1J"
b1 z
b1 &#
b1 i"
b1 {"
b1 N"
b1 B#
b1 Q'
1Y"
0w#
0&"
0(
b0 =&
0x#
0%"
06&
1;%
1=%
b1000000 !%
b1000010 }$
b11111111010111111111000001101111 B&
b11111111010111111111000001101111 ;&
0(&
b1000010 B
b11111111010111111111000001101111 5
b1 =
b1000010 :
r0.755 C
1D
1,
#760000
0D
0,
#765000
1#$
1["
1*"
19"
b11100 9$
0}#
b10 ="
b10 [#
b10 ]'
b1111111100 ?"
b1111111100 ]#
b1111111100 ['
b10 :"
b10 Y#
b10 _'
b1 >"
b1 \#
b1 \'
b1 ."
b1 S#
b1 `'
b1111 +"
b1111 R#
b1111 a'
1-"
17"
b0 8%
b11011000110010001011111011100100111001100110001 (%
1:$
b11100 6$
b0 .%
b0 -%
b0 +%
b0x *%
b0 '%
1(
1m#
b11000 )%
1/%
b100000 !%
13&
b111 ~$
b11100 S&
b11000 W&
1<%
0;%
1>%
0=%
b1000011 }$
03%
01%
bx 2%
bx 0%
b1000011 :
b1000011 B
bx &%
r0.765 C
1D
1,
#770000
0D
0,
#775000
09"
0*"
0#$
1L"
0["
08#
12'
b0 8%
b11011000110010001011111011100100111001100110010 (%
bx 9&
bx q$
bx p$
xk$
xj$
xi$
bx h$
1E'
b10 F'
0Y"
1o#
1,"
0;"
b10 #(
b0 ~'
b1111111100 }'
0(
b1 =&
1u#
1("
1x#
1%"
b0 z#
b0 #"
b0 @&
b0 ;'
b11100 t#
b11100 )"
b11100 2&
b11100 9'
b10000 !%
11%
b0 0%
bx +$
bx c&
bx #'
bx U&
b0 *$
b0 b&
b0 "'
b0 T&
0<%
0>%
b1000100 }$
b11111111010111111111000001101111 v$
0/%
b0 R&
b0 Q&
b0 O&
b0x N&
b0 M&
b1000100 B
b11000 7
b1000100 :
r0.775 C
1D
1,
#780000
0D
0,
#785000
0-(
b1 !
b1 O
b1 b'
b1 '(
b1000000 ~&
b1 }&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0 u&
b0 t&
b0 9&
b0 q$
b0 p$
0k$
0j$
1i$
b0 h$
1(
b11 #(
b10000000000 }'
b1 ~'
1r'
b1 s'
b11111111 ((
b11111111 +
b11111111 I"
b11111111 p'
b11111111 $(
1u'
0#
1U'
b11 F'
0J"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx {&
b0 z&
1(&
1K&
13%
b0 2%
b0 +$
b0 c&
b0 #'
b0 U&
b0 X&
b1000101 }$
b1000101 :
b1000101 B
r0.785 C
1D
1,
#790000
0D
0,
#795000
b1000000 ~&
b1 }&
b0 u&
b0 F'
b11 T'
0(
0u'
b1000110 }$
b1110 J&
b0 X&
b0 {&
b1000110 B
b1000110 :
r0.795 C
1D
1,
#800000
0D
0,
#805000
0L"
1(
0,"
b100 #(
b1000111 }$
b1101 J&
b0 X&
b1000111 :
b1000111 B
r0.805 C
1D
1,
#810000
0D
0,
#815000
1U"
bz !
bz O
bz b'
bz '(
15"
1#
0r'
1'
0(
b1001000 }$
b1100 J&
b0 X&
b1001000 B
b1001000 :
r0.8149999999999999 C
1D
1,
#820000
0D
0,
#825000
0,(
0U"
1'$
07"
1(
b0 #(
05"
0o#
b0 T'
0W"
1w#
1&"
b1001001 }$
b1011 J&
b0 X&
b1001001 :
b1001001 B
r0.825 C
1D
1,
#830000
0D
0,
#835000
1@"
0'$
11"
b11100 F"
b11100 b#
b11100 V'
b0 ="
b0 [#
b0 ]'
b0 ?"
b0 ]#
b0 ['
b0 :"
b0 Y#
b0 _'
b0 >"
b0 \#
b0 \'
b0 ."
b0 S#
b0 `'
b0 +"
b0 R#
b0 a'
0-"
02'
b1 T'
1Q"
1`"
b11100 ""
b11100 }"
b11100 o"
b11100 t"
b11100 f"
b11100 Q#
b11100 G'
0U'
0E'
0w#
0&"
0m#
0'
1;"
0(
b11 =&
0x#
0%"
b1001010 }$
b1010 J&
b0 X&
0(&
b1001010 B
b1001010 :
r0.835 C
1D
1,
#840000
0D
0,
#845000
b1 !
b1 O
b1 b'
b1 '(
b1 *(
1-(
b1 )(
1,(
0b"
0@"
1(
0B"
b1 |'
b0 w'
1n#
0`"
b1001011 }$
b1001 J&
b0 X&
b1001011 :
b1001011 B
r0.845 C
1D
1,
#850000
0D
0,
#855000
b10 |'
b111 ((
b111 +
b111 I"
b111 p'
b111 $(
0(
b1001100 }$
b1000 J&
b0 X&
b1001100 B
b1001100 :
r0.855 C
1D
1,
#860000
0D
0,
#865000
bz !
bz O
bz b'
bz '(
0-(
0,(
1(
1'
1y'
b1 x'
b1001101 }$
b111 J&
b0 X&
b1001101 :
b1001101 B
r0.865 C
1D
1,
#870000
0D
0,
#875000
b1 T"
b1 E#
b1 6'
1O"
1R"
0'
12"
1/"
b1 4"
b1 V#
b1 m'
0(
b1001110 }$
b110 J&
b0 X&
b1001110 B
b1001110 :
r0.875 C
1D
1,
#880000
0D
0,
#885000
b0 !
b0 O
b0 b'
b0 '(
b0 *(
1-(
b0 )(
1,(
1b"
0O"
0R"
01"
b1 &$
b1 7$
b1 <&
1(
02"
0/"
1B"
b0 |'
0y'
b100000 v'
b1 w'
0n#
b0 T'
0Q"
1w#
1&"
b1 v#
b1 '"
b1 8$
b1 S'
b1001111 }$
b101 J&
b0 X&
b1001111 :
b1001111 B
r0.885 C
1D
1,
#890000
0D
0,
#895000
0w#
0&"
0(
b1010000 }$
b100 J&
b0 X&
b1010000 B
b1010000 :
r0.895 C
1D
1,
#900000
0D
0,
#905000
1(
b1010001 }$
b11 J&
b0 X&
b1010001 :
b1010001 B
r0.905 C
1D
1,
#910000
0D
0,
#915000
0(
b1010010 }$
b10 J&
b0 X&
b1010010 B
b1010010 :
r0.915 C
1D
1,
#920000
0D
0,
#925000
1(
b1010011 }$
b1 J&
b0 X&
b1010011 :
b1010011 B
r0.925 C
1D
1,
#930000
0D
0,
#935000
0(
b1010100 }$
b0 J&
b0 X&
b1010100 B
b1010100 :
r0.9350000000000001 C
1D
1,
#940000
0D
0,
#945000
1(
b1010101 }$
1I&
b0 X&
b1010101 :
b1010101 B
r0.945 C
1D
1,
#950000
0D
0,
#955000
b0 8%
b1110100011100100110000101110000 (%
0(
b10000000 !%
0K&
b1010110 }$
b0 X&
b1010110 B
b1010110 :
r0.955 C
1D
1,
#960000
0D
0,
#965000
1(
1"
b1010111 }$
b1111 J&
bx X&
b1010111 :
b1010111 B
r0.965 C
1D
1,
#970000
0D
0,
#975000
0(
b1011000 }$
0I&
1"
04%
b1011000 B
b1011000 :
r0.975 C
1D
1,
#980000
0D
0,
#985000
1(
b1011001 }$
1"
b1011001 :
b1011001 B
r0.985 C
1D
1,
#990000
0D
0,
#995000
0(
b1011010 }$
1"
b1011010 B
b1011010 :
r0.995 C
1D
1,
#1000000
0D
0,
#1005000
1(
b1011011 }$
1"
b1011011 :
b1011011 B
r1.005 C
1D
1,
#1010000
0D
0,
#1015000
0(
b1011100 }$
1"
b1011100 B
b1011100 :
r1.015 C
1D
1,
#1020000
0D
0,
#1025000
1(
b1011101 }$
1"
b1011101 :
b1011101 B
r1.025 C
1D
1,
#1030000
0D
0,
#1035000
0(
b1011110 }$
1"
b1011110 B
b1011110 :
r1.035 C
1D
1,
#1040000
0D
0,
#1045000
1(
b1011111 }$
1"
b1011111 :
b1011111 B
r1.045 C
1D
1,
#1050000
0D
0,
#1055000
0(
b1100000 }$
1"
b1100000 B
b1100000 :
r1.055 C
1D
1,
#1060000
0D
0,
#1065000
1(
b1100001 }$
1"
b1100001 :
b1100001 B
r1.065 C
1D
1,
#1070000
0D
0,
#1075000
0(
b1100010 }$
1"
b1100010 B
b1100010 :
1D
1,
